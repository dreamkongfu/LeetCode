1.String soft
cs = s.toCharArray()
Array.sort(cs)
new String(cs)

2.ArrayList sublist
public List subList(int fromIndex, int toIndex)
fromIndex – low endpoint (inclusive) of the subList
toIndex – high endpoint (exclusive) of the subList, if exceed the bound, throw exception
取 最后一个元素，toIndex = size()就可以了
2.1 Sort 
Collections.sort(list); 
3. PriorityQueue
自动sort
PriorityQueue<Integer> maxHeap = new PriorityQueue<Integer>(k, Collections.reverseOrder());
PriorityQueue<Integer> minHeap = new PriorityQueue<Integer>(k);
--------------------- 
作者：MebiuW 
来源：CSDN 
原文：https://blog.csdn.net/MebiuW/article/details/54408831 
版权声明：本文为博主原创文章，转载请附上博文链接！
maxHeap.peek()
maxHeap.poll()
maxHeap.add()
maxHeap.remove()
4.TreeMap
get()
remove()
firstKey();
lastKey()
rank by value 
5.new Comparetor<T t>(){
    @Override
        public int compare(T t1, T t2){
          return t1.compareTo(t2);
        }
}
6.Collections.reverse(list);
7.Collections.binarySearch
int index = Collections.binarySearch(al, 50,  
                                  Collections.reverseOrder());

